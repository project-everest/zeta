module Zeta.Steel.FormatsManual
include Zeta.Steel.FormatsManual.Spec
(* This file should eventually be generated by EverParse and renamed
   to Zeta.Steel.Formats *)
open Zeta.Steel.ApplicationTypes

/// Factored into another module?

module U16 = FStar.UInt16

let slot = x:slot_id{ U16.v x < U16.v store_size }

let is_internal_key_for_data (k:base_key)
  : bool
  = k.significant_digits = 256us

let is_internal_key_root (k:base_key)
  : bool
  = k.significant_digits = 0us

module P = Zeta.Steel.Parser
val parse_app_record: P.parser Zeta.Steel.ApplicationRecord.spec_parser_app_record

