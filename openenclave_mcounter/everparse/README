EverParse: verified parsing for binary data formats

Copyright (C) 2019, 2020 Microsoft Corporation.
All rights reserved.

Please read the license files for EverParse and its included
dependencies in the licenses\ subdirectory. Your use of this software
implies your unconditional acceptance of the terms of these licenses.


DESCRIPTION

EverParse takes a semi-formal description of binary formats and
automatically produces C implementations of validators formally
verified with respect to memory safety, functional correctness, and
absence of double fetches.


USAGE

1. Write your format description in a .3d file, say MyFormat.3d

2. Run the following command:

   <path-to-everparse>/everparse.sh <path-to-your-file>/MyFormat.3d

Then, EverParse produces, in the current directory:

* MyFormat.fsti and MyFormat.fst, a specification of your data formats
  and a formally verified implementation of validators, both in the F*
  verification language

* MyFormat.h and MyFormat.c, a C implementation compiled from the
  verified F* implementation

* MyFormatWrappers.h and MyFormatWrappers.c, a cleaner interface for
  integration with any existing outside code.

* EverParse.h (EverParse-specific helpers) and EverParseEndianness.h
  (reading integers from their byte representations).

You can provide several .3d files in the same invocation; then,
EverParse.h and EverParseEndianness.h will be shared across .c and .h
files produced for all the .3d files that you provided.

COLOPHON

EverParse and F* are components of the Everest project. For more
information about EverParse, F* and Everest, please go to
https://project-everest.github.io/

This is EverParse v2022.02.02
Running with F* 76062158f3 (2022-02-01 17:17:49 UTC+0000)
Running with KReMLin 3e82a6e6 (2022-01-26 15:38:27 UTC+0000)
Running with Z3 version 4.8.5 - 64 bit