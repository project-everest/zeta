uint16 slot_id;

struct {
  uint64 v3;
  uint64 v2;
  uint64 v1;
  uint64 v0;
} u256;

struct {
  u256 k;
  uint8 significant_digits;
} key;

u256 data_t;

enum {
  vnone,
  vsome,
  (255)
} voption;

struct {
  voption dv_tag;
  select(dv_tag) {
    case vnone: Empty;
    case vsome: data_t;
  } dv;
} data_value;

u256 hash_value;

enum {
  vfalse,
  vtrue,
  (255)
} vbool;

struct {
   key dhd_key;
   hash_value dhd_h; /* I cannot name this field h because it would clash with the finalizer generated by QD */
   vbool evicted_to_blum;
   /* vbool in_store; */
} descendent_hash_desc;

struct {
  voption dh_tag;
  select(dh_tag) {
    case vnone: Empty;
    case vsome: descendent_hash_desc;
  } dh;
} descendent_hash;

enum {
  mval,
  dval,
  (255)
} value_kind;

struct {
  descendent_hash l;
  descendent_hash r;
} mval_value;

struct {
  value_kind v_tag;
  select(v_tag) {
    case mval: mval_value;
    case dval: data_value;
  } v;
} value;

enum {
  MAdd,
  BAdd,
  (255)
} add_method;

struct {
  key record_key;
  value record_value;
  add_method record_add_method;
  vbool record_l_child_in_store;
  vbool record_r_child_in_store;
} record;

enum {
  Get,
  Put,
  AddM,
  EvictM,
  AddB,
  EvictB,
  EvictBM,
  (255)
} vlog_entry_kind;

struct {
  slot_id vegp_s;
  data_value vegp_v;
} vlog_entry_get_put;

struct {
  slot_id veam_s;
  record veam_r;
  slot_id veam_s2;
} vlog_entry_addm;

struct {
  slot_id veem_s;
  slot_id veem_s2;
} vlog_entry_evictm;

uint64 timestamp;
uint16 thread_id;

struct {
  record sr_record;
  timestamp sr_timestamp;
  thread_id sr_thread_id;
} stamped_record;

struct {
  slot_id veab_s;
  record veab_r;
  timestamp veab_t;
  thread_id veab_j;
} vlog_entry_addb;

struct {
  slot_id veeb_s;
  timestamp veeb_t;
} vlog_entry_evictb;

struct {
  slot_id veebm_s;
  slot_id veebm_s2;
  timestamp veebm_t;
} vlog_entry_evictbm;

struct {
  vlog_entry_kind ve_tag;
  select(ve_tag) {
    case Get: vlog_entry_get_put;
    case Put: vlog_entry_get_put;
    case AddM: vlog_entry_addm;
    case EvictM: vlog_entry_evictm;
    case AddB: vlog_entry_addb;
    case EvictB: vlog_entry_evictb;
    case EvictBM: vlog_entry_evictbm;
  } ve;
} vlog_entry;
