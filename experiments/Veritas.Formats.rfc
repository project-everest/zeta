enum /*@open*/ {
  uint16_max_value(65535),
  (65535)
} uint16_is_max;

struct {
  uint16_is_max v;
  select(v) {
    case uint16_max_value: Fail;
    default: Empty;
  } prf;
} slot_id;

struct {
  uint64 v3;
  uint64 v2;
  uint64 v1;
  uint64 v0;
} uint256;

struct {
  uint256 k;
  uint8 significant_digits;
} key;

uint256 data_t;

enum {
  vnone,
  vsome,
  (255)
} voption;

struct {
  voption tag;
  select(tag) {
    case vnone: Empty;
    case vsome: data_t;
  } payload;
} data_value;

uint256 hash_value;

enum {
  vfalse,
  vtrue,
  (255)
} vbool;

struct {
   key k;
   hash_value hash; /* I cannot name this field h because it would clash with the finalizer generated by QD */
   vbool evicted_to_blum;
   vbool in_store;
} descendent_hash_desc;

struct {
  voption tag;
  select(tag) {
    case vnone: Empty;
    case vsome: descendent_hash_desc;
  } payload;
} descendent_hash;

enum {
  mval,
  dval,
  (255)
} value_kind;

struct {
  descendent_hash l;
  descendent_hash r;
} mval_value;

struct {
  value_kind tag;
  select(tag) {
    case mval: mval_value;
    case dval: data_value;
  } payload;
} value;

struct {
  key k;
  value v;
} record;

enum {
  Get,
  Put,
  AddM,
  EvictM,
  AddB,
  EvictB,
  EvictBM,
  (255)
} vlog_entry_kind;

struct {
  slot_id s;
  data_value v;
} vlog_entry_get_put;

struct {
  slot_id s;
  record r;
} vlog_entry_addm;

struct {
  slot_id s;
  slot_id s2;
} vlog_entry_evictm;

uint64 timestamp;
uint16 thread_id;

struct {
  slot_id s;
  record r;
  timestamp t;
  thread_id j;
} vlog_entry_addb;

struct {
  slot_id s;
  timestamp t;
} vlog_entry_evictb;

struct {
  slot_id s;
  slot_id s2;
  timestamp t;
} vlog_entry_evictbm;

struct {
  vlog_entry_kind tag;
  select(tag) {
    case Get: vlog_entry_get_put;
    case Put: vlog_entry_get_put;
    case AddM: vlog_entry_addm;
    case EvictM: vlog_entry_evictm;
    case AddB: vlog_entry_addb;
    case EvictB: vlog_entry_evictb;
    case EvictBM: vlog_entry_evictbm;
  } payload;
} vlog_entry;
