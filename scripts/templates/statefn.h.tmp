class @name_title@;

    class @name_title@_ParamSerializer : public AppParam
    {
    public:
        @name_title@_ParamSerializer(const @name_title@* fn);
        virtual size_t Serialize (uint8_t *buf, size_t size) const override;
        virtual size_t SerializationLength() const override;
        virtual void Serialize4Hash(Hasher& hasher) const override;

    private:
        const @name_title@* fn_;
    };

#define @indicate_has_output@

    class @name_title@ : public AppTransFn
    {
    public:
        @name_title@ (
            @@params|const @host_tname@* @vname@|,n            @@
        );

#ifdef @has_output_indicator@
        using out_t = @c_output_type@;
#endif

        const AppParam& GetParam() const override
        {
            return paramSerializer_;
        }

        const Record& GetRecord(int idx) const override;

        const Value& GetPostValue(int idx) const override;

        bool Touches(int idx) const override;

        void SetOutput(ReadLog& log) override;

#ifdef @has_output_indicator@
        const out_t *GetOutput() const
        {
            return &out_;
        }
#endif

    private:

        friend class @name_title@_ParamSerializer;

        @@params|@host_tname@ @vname@_;|n        @@

        @name_title@_ParamSerializer paramSerializer_;

#ifdef @has_output_indicator@
        out_t out_;
#endif
    };
