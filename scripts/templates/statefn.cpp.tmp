@name_title@::@name_title@ (@c_param_list@)
    : AppTransFn { @id@, @arity@, @has_output_bool@ }
    @c_param_member_init@
{

}

const Record& @name_title@::GetRecord(int idx) const
{
    assert (idx < @arity@);

    @map_idx_record@

    throw std::invalid_argument("invalid argument");
}

const Value& @name_title@::GetPostValue(int idx) const
{
    assert (idx < @arity@);

    // TODO: Implement: needed for correct merkle updates

    throw std::runtime_error("not implemented");
}

bool @name_title@::Touches(int idx) const
{
    assert (idx < @arity@);

    // TODO: Implement correct Touches for better performance
    // by minimizing merkle tree updates

    return true;
}

void @name_title@::SetOutput(ReadLog& log)
{
    LowParse_Slice_slice inp(log.Current(), log.LeftToRead());
    uint32_t len = @c_output_type@_jumper(inp, 0);
    out_ = @c_output_type@_reader(inp, 0);
    log.DeserializeBuf(len);
}
